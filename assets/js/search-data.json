{
  
    
        "post0": {
            "title": "(1주차) 9월7일",
            "content": "&#44053;&#51032;&#50689;&#49345; . . - (1/6): 과목소개 . - (2/6): 카카오톡 채널 소개 . - (3/6): 텐서플로우-케라스 vs 파이토치-fastai, 과제안내 . - (4/6): 텐서플로우-케라스 vs 파이토치-fastai, 과제안내 . - (5/6): 텐서플로우-케라스 vs 파이토치-fastai, 과제안내 . - (6/6): 텐서플로우-케라스 vs 파이토치-fastai, 과제안내 . from fastai.vision.all import * . path=untar_data(URLs.PETS)/&#39;images&#39; . files=get_image_files(path) # 이미지파일들의 이름을 모두 복붙하여 리스트를 만든뒤에 files.txt로 저장하는 과정으로 비유할 수 있음 . files[2] # txt 파일의 3번째 목록 . Path(&#39;/home/cgb4/.fastai/data/oxford-iiit-pet/images/leonberger_5.jpg&#39;) . def label_func(f): if f[0].isupper(): return &#39;cat&#39; else: return &#39;dog&#39; . label_func(&#39;asdf&#39;) . &#39;dog&#39; . dls=ImageDataLoaders.from_name_func(path,files,label_func,item_tfms=Resize(224)) . dls.show_batch(max_n=16) . learn=cnn_learner(dls,resnet34,metrics=error_rate) . Downloading: &#34;https://download.pytorch.org/models/resnet34-b627a593.pth&#34; to C: Users cgb/.cache torch hub checkpoints resnet34-b627a593.pth . ImportError Traceback (most recent call last) ~ AppData Local Temp/ipykernel_29964/2234347239.py in &lt;module&gt; -&gt; 1 learn=cnn_learner(dls,resnet34,metrics=error_rate) ~ anaconda3 envs bda2021 lib site-packages fastai vision learner.py in cnn_learner(dls, arch, normalize, n_out, pretrained, config, loss_func, opt_func, lr, splitter, cbs, metrics, path, model_dir, wd, wd_bn_bias, train_bn, moms, **kwargs) 177 if n_out is None: n_out = get_c(dls) 178 assert n_out, &#34;`n_out` is not defined, and could not be inferred from data, set `dls.c` or pass `n_out`&#34; --&gt; 179 model = create_cnn_model(arch, n_out, pretrained=pretrained, **kwargs) 180 181 splitter=ifnone(splitter, meta[&#39;split&#39;]) ~ anaconda3 envs bda2021 lib site-packages fastai vision learner.py in create_cnn_model(arch, n_out, pretrained, cut, n_in, init, custom_head, concat_pool, **kwargs) 141 &#34;Create custom convnet architecture&#34; 142 meta = model_meta.get(arch, _default_meta) --&gt; 143 body = create_body(arch, n_in, pretrained, ifnone(cut, meta[&#39;cut&#39;])) 144 if custom_head is None: 145 nf = num_features_model(nn.Sequential(*body.children())) ~ anaconda3 envs bda2021 lib site-packages fastai vision learner.py in create_body(arch, n_in, pretrained, cut) 63 def create_body(arch, n_in=3, pretrained=True, cut=None): 64 &#34;Cut off the body of a typically pretrained `arch` as determined by `cut`&#34; &gt; 65 model = arch(pretrained=pretrained) 66 _update_first_layer(model, n_in, pretrained) 67 #cut = ifnone(cut, cnn_config(arch)[&#39;cut&#39;]) ~ anaconda3 envs bda2021 lib site-packages torchvision models resnet.py in resnet34(pretrained, progress, **kwargs) 286 progress (bool): If True, displays a progress bar of the download to stderr 287 &#34;&#34;&#34; --&gt; 288 return _resnet(&#39;resnet34&#39;, BasicBlock, [3, 4, 6, 3], pretrained, progress, 289 **kwargs) 290 ~ anaconda3 envs bda2021 lib site-packages torchvision models resnet.py in _resnet(arch, block, layers, pretrained, progress, **kwargs) 260 model = ResNet(block, layers, **kwargs) 261 if pretrained: --&gt; 262 state_dict = load_state_dict_from_url(model_urls[arch], 263 progress=progress) 264 model.load_state_dict(state_dict) ~ anaconda3 envs bda2021 lib site-packages torch hub.py in load_state_dict_from_url(url, model_dir, map_location, progress, check_hash, file_name) 551 r = HASH_REGEX.search(filename) # r is Optional[Match[str]] 552 hash_prefix = r.group(1) if r else None --&gt; 553 download_url_to_file(url, cached_file, hash_prefix, progress=progress) 554 555 if _is_legacy_zip_format(cached_file): ~ anaconda3 envs bda2021 lib site-packages torch hub.py in download_url_to_file(url, dst, hash_prefix, progress) 436 if hash_prefix is not None: 437 sha256 = hashlib.sha256() --&gt; 438 with tqdm(total=file_size, disable=not progress, 439 unit=&#39;B&#39;, unit_scale=True, unit_divisor=1024) as pbar: 440 while True: ~ anaconda3 envs bda2021 lib site-packages tqdm notebook.py in __init__(self, *args, **kwargs) 240 unit_scale = 1 if self.unit_scale is True else self.unit_scale or 1 241 total = self.total * unit_scale if self.total else self.total --&gt; 242 self.container = self.status_printer(self.fp, total, self.desc, self.ncols) 243 self.container.pbar = proxy(self) 244 self.displayed = False ~ anaconda3 envs bda2021 lib site-packages tqdm notebook.py in status_printer(_, total, desc, ncols) 113 # Prepare IPython progress bar 114 if IProgress is None: # #187 #451 #558 #872 --&gt; 115 raise ImportError( 116 &#34;IProgress not found. Please update jupyter and ipywidgets.&#34; 117 &#34; See https://ipywidgets.readthedocs.io/en/stable&#34; ImportError: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html . - 에러를 해결하기 위해서는 아래를 설치하면 된다. . # !conda install -c conda-forge ipywidgets -y # !conda install -c conda-forge nodejs -y . - 위를 설치하고 커널을 재시작하면 정상적으로 모형이 만들어진다. . learn=cnn_learner(dls,resnet34,metrics=error_rate) . learn.fine_tune(1) . epoch train_loss valid_loss error_rate time . 0 | 0.144466 | 0.020612 | 0.008119 | 00:09 | . epoch train_loss valid_loss error_rate time . 0 | 0.062860 | 0.018618 | 0.005413 | 00:11 | . learn.predict(files[0]) . (&#39;dog&#39;, tensor(1), tensor([2.4075e-07, 1.0000e+00])) . learn.show_results() . &#50724;&#45813;&#48516;&#49437; . interp = Interpretation.from_learner(learn) . interp.plot_top_losses(16) . &#51652;&#51676; &#51096;&#46104;&#45716;&#44172; &#47582;&#45716;&#44148;&#44032;? . PILImage.create(&#39;2021-09-06-cat1.png&#39;) . learn.predict(PILImage.create(&#39;2021-09-06-cat1.png&#39;)) . (&#39;cat&#39;, tensor(0), tensor([1.0000e+00, 1.0442e-07])) . - 헷갈리는 고양이 사진인데 잘 구분한다. . PILImage.create(&#39;2021-09-06-cat2.jpeg&#39;) . learn.predict(PILImage.create(&#39;2021-09-06-cat2.jpeg&#39;)) . (&#39;cat&#39;, tensor(0), tensor([1.0000e+00, 3.3645e-06])) . PILImage.create(&#39;2021-09-06-hani01.jpeg&#39;) . learn.predict(PILImage.create(&#39;2021-09-06-hani01.jpeg&#39;)) . (&#39;dog&#39;, tensor(1), tensor([3.1670e-06, 1.0000e+00])) . PILImage.create(&#39;2021-09-06-hani02.jpeg&#39;) . learn.predict(PILImage.create(&#39;2021-09-06-hani02.jpeg&#39;)) . (&#39;dog&#39;, tensor(1), tensor([8.1501e-06, 9.9999e-01])) . PILImage.create(&#39;2021-09-06-hani03.jpg&#39;) . learn.predict(PILImage.create(&#39;2021-09-06-hani03.jpg&#39;)) . (&#39;dog&#39;, tensor(1), tensor([0.0270, 0.9730])) . &#45796;&#51020;&#49884;&#44036; . 이미지 크롤링 --&gt; 데이터셋트 --&gt; A,B 구분하는 모델 | . &#49689;&#51228; . 위의 사진들 이외에 사진들을 바탕으로 예측을 하는 모형구축. | 예측결과를 스샷으로 저장하여 제출 (이미지도 함께 스샷할것) | . &#49689;&#51228;&#52280;&#44256;&#51088;&#47308; . import PIL urls=&#39;https://t1.daumcdn.net/cfile/tistory/9925F03C5AD486B033&#39; urllib.request.urlretrieve(urls,&#39;temp.png&#39;) learn.predict(PILImage.create(&#39;temp.png&#39;)) . (&#39;dog&#39;, tensor(1), tensor([0.0091, 0.9909])) .",
            "url": "https://guebin.github.io/2021BDA/2021/09/07/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%947%EC%9D%BC.html",
            "relUrl": "/2021/09/07/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%947%EC%9D%BC.html",
            "date": " • Sep 7, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "(1주차) 9월2일",
            "content": "&#44053;&#51032;&#50689;&#49345; . - (1/3): 과목소개 . - (2/3): 카카오톡 채널 소개 . - (3/3): 텐서플로우-케라스 vs 파이토치-fastai, 과제안내 . . &#47112;&#54252;&#53944; . - 카카오톡 스샷제출 .",
            "url": "https://guebin.github.io/2021BDA/2021/09/02/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%942%EC%9D%BC.html",
            "relUrl": "/2021/09/02/(1%EC%A3%BC%EC%B0%A8)-9%EC%9B%942%EC%9D%BC.html",
            "date": " • Sep 2, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "(A1) 깃허브와 fastpages를 이용하여 블로그 개설하기",
            "content": "About this doc . - 본 포스트는 2021년 1학기 Python 입문 강의내용중 일부를 업로드 하였음. . - Github, fastpages를 사용하여 블로그를 개설하고 관리하는 방법에 대한 설명임. . .",
            "url": "https://guebin.github.io/2021BDA/2021/08/17/(A1)-%EA%B9%83%ED%97%88%EB%B8%8C%EC%99%80-fastpages%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B0%9C%EC%84%A4%ED%95%98%EA%B8%B0.html",
            "relUrl": "/2021/08/17/(A1)-%EA%B9%83%ED%97%88%EB%B8%8C%EC%99%80-fastpages%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B0%9C%EC%84%A4%ED%95%98%EA%B8%B0.html",
            "date": " • Aug 17, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "최규빈 . guebin@jbnu.ac.kr | 자연과학대학교 본관 205호 | 카카오톡 오픈채널 1 | . 2021년 2학기 종료후 폐쇄예정 &#8617; . |",
          "url": "https://guebin.github.io/2021BDA/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://guebin.github.io/2021BDA/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}